# Huly Self-Hosted - GitHub Repository Version
# Optimized for Coolify deployment from GitHub
# 
# This file is designed to be deployed via Coolify using GitHub as source
# All sensitive configuration is handled via Coolify environment variables

name: huly_production

services:
  cockroach:
    image: cockroachdb/cockroach:latest-v24.2
    command: start-single-node --accept-sql-without-tls
    environment:
      - COCKROACH_DATABASE=${CR_DATABASE:-defaultdb}
      - COCKROACH_USER=${CR_USERNAME:-huly_prod}
      - COCKROACH_PASSWORD=${CR_USER_PASSWORD}
    volumes:
      - cockroach_data:/cockroach/cockroach-data
      - cockroach_certs:/cockroach/certs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.6
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    container_name: redpanda
    volumes:
      - redpanda_data:/var/lib/redpanda/data
    environment:
      - REDPANDA_SUPERUSER_USERNAME=${REDPANDA_ADMIN_USER:-admin}
      - REDPANDA_SUPERUSER_PASSWORD=${REDPANDA_ADMIN_PWD}
    healthcheck:
      test: ['CMD', 'rpk', 'cluster', 'info', '-X', 'user=${REDPANDA_ADMIN_USER:-admin}', '-X', 'pass=${REDPANDA_ADMIN_PWD}']
      interval: 10s
      timeout: 5s
      retries: 10

  minio:
    image: minio/minio
    command: server /data --address ":9000" --console-address ":9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    healthcheck:
      test: ['CMD', 'mc', 'ready', 'local']
      interval: 5s
      retries: 10
    restart: unless-stopped

  elastic:
    image: elasticsearch:7.14.2
    command: |
      /bin/sh -c "./bin/elasticsearch-plugin list | grep -q ingest-attachment || yes | ./bin/elasticsearch-plugin install --silent ingest-attachment;
      /usr/local/bin/docker-entrypoint.sh eswrapper"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    environment:
      - ELASTICSEARCH_PORT_NUMBER=9200
      - BITNAMI_DEBUG=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2048m -Xmx2048m
      - http.cors.enabled=true
      - http.cors.allow-origin=http://localhost:8082
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 3g
        reservations:
          memory: 2g

  rekoni:
    image: hardcoreeng/rekoni-service:${HULY_VERSION:-s0.7.204}
    environment:
      - SECRET=${SECRET}
      - SERVICE_FQDN_REKONI_4004=/_rekoni
    deploy:
      resources:
        limits:
          memory: 1g
    restart: unless-stopped

  stats:
    image: hardcoreeng/stats:${HULY_VERSION:-s0.7.204}
    environment:
      - PORT=4900
      - SERVER_SECRET=${SECRET}
      - SERVICE_FQDN_STATS_4900=/_stats
    restart: unless-stopped

  account:
    image: hardcoreeng/account:${HULY_VERSION:-s0.7.204}
    environment:
      - SERVICE_FQDN_ACCOUNT_3000=/_accounts
      - SERVER_PORT=3000
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - TRANSACTOR_URL=ws://transactor:3333;ws${SECURE:+s}://${HOST_ADDRESS}/_transactor
      - STORAGE_CONFIG=datalake|http://datalake:4030
      - FRONT_URL=http${SECURE:+s}://${HOST_ADDRESS}
      - STATS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_stats
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_accounts
      - ACCOUNT_PORT=3000
      - QUEUE_CONFIG=redpanda:9092
    restart: unless-stopped

  transactor:
    image: hardcoreeng/transactor:${HULY_VERSION:-s0.7.204}
    environment:
      - SERVICE_FQDN_TRANSACTOR_3333=/_transactor
      - SERVER_PORT=3333
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - STORAGE_CONFIG=datalake|http://datalake:4030
      - FRONT_URL=http${SECURE:+s}://${HOST_ADDRESS}
      - ACCOUNTS_URL=http://account:3000
      - FULLTEXT_URL=http://fulltext:4700
      - STATS_URL=http://stats:4900
      - LAST_NAME_FIRST=${LAST_NAME_FIRST:-true}
      - QUEUE_CONFIG=redpanda:9092
    restart: unless-stopped

  collaborator:
    image: hardcoreeng/collaborator:${HULY_VERSION:-s0.7.204}
    environment:
      - SERVICE_FQDN_COLLABORATOR_3078=/_collaborator
      - COLLABORATOR_PORT=3078
      - SECRET=${SECRET}
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - STORAGE_CONFIG=datalake|http://datalake:4030
    restart: unless-stopped

  workspace:
    image: hardcoreeng/workspace:${HULY_VERSION:-s0.7.204}
    environment:
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - TRANSACTOR_URL=ws://transactor:3333;ws${SECURE:+s}://${HOST_ADDRESS}/_transactor
      - STORAGE_CONFIG=datalake|http://datalake:4030
      - MODEL_ENABLED=*
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - QUEUE_CONFIG=redpanda:9092
    restart: unless-stopped

  fulltext:
    image: hardcoreeng/fulltext:${HULY_VERSION:-s0.7.204}
    environment:
      - SERVER_SECRET=${SECRET}
      - DB_URL=${CR_DB_URL}
      - FULLTEXT_DB_URL=http://elastic:9200
      - ELASTIC_INDEX_NAME=huly_storage_index
      - STORAGE_CONFIG=datalake|http://datalake:4030
      - REKONI_URL=http://rekoni:4004
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - QUEUE_CONFIG=redpanda:9092
    restart: unless-stopped

  datalake:
    image: hardcoreeng/datalake:${HULY_VERSION:-s0.7.204}
    depends_on:
      minio:
        condition: service_healthy
      cockroach:
        condition: service_started
      stats:
        condition: service_started
      account:
        condition: service_started
    environment:
      - SERVICE_FQDN_DATALAKE_4030=/_datalake
      - PORT=4030
      - SECRET=${SECRET}
      - ACCOUNTS_URL=http://account:3000
      - STATS_URL=http://stats:4900
      - DB_URL=${CR_DB_URL}
      - BUCKETS=huly,eu|http://minio:9000?accessKey=minioadmin&secretKey=minioadmin
      - QUEUE_CONFIG=redpanda:9092
    restart: unless-stopped

  # MAIN SERVICE - This is what Coolify will expose
  front:
    image: hardcoreeng/front:${HULY_VERSION:-s0.7.204}
    environment:
      - SERVER_PORT=8080
      - SERVER_SECRET=${SECRET}
      - LOVE_ENDPOINT=http${SECURE:+s}://${HOST_ADDRESS}/_love
      - ACCOUNTS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_accounts
      - ACCOUNTS_URL_INTERNAL=http://account:3000
      - REKONI_URL=http${SECURE:+s}://${HOST_ADDRESS}/_rekoni
      - CALENDAR_URL=http${SECURE:+s}://${HOST_ADDRESS}/_calendar
      - GMAIL_URL=http${SECURE:+s}://${HOST_ADDRESS}/_gmail
      - TELEGRAM_URL=http${SECURE:+s}://${HOST_ADDRESS}/_telegram
      - STATS_URL=http${SECURE:+s}://${HOST_ADDRESS}/_stats
      - FILES_URL=http${SECURE:+s}://${HOST_ADDRESS}/_datalake/blob/:workspace/:blobId/:filename
      - UPLOAD_URL=http${SECURE:+s}://${HOST_ADDRESS}/_datalake/upload/form-data/:workspace
      - PREVIEW_CONFIG=image|http${SECURE:+s}://${HOST_ADDRESS}/_datalake/image/fit=cover,width=:width,height=:height,dpr=:dpr/:workspace/:blobId;video|http${SECURE:+s}://${HOST_ADDRESS}/_datalake/meta/:workspace/:blobId
      - ELASTIC_URL=http://elastic:9200
      - COLLABORATOR_URL=ws${SECURE:+s}://${HOST_ADDRESS}/_collaborator
      - STORAGE_CONFIG=datalake|http://datalake:4030
      - TITLE=${TITLE:-Huly Self-Hosted}
      - DEFAULT_LANGUAGE=${DEFAULT_LANGUAGE:-en}
      - LAST_NAME_FIRST=${LAST_NAME_FIRST:-true}
      - DESKTOP_UPDATES_CHANNEL=${HULY_VERSION:-s0.7.204}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

# Persistent volumes for data storage
volumes:
  elastic_data:
    driver: local
  minio_data:
    driver: local
  cockroach_data:
    driver: local
  cockroach_certs:
    driver: local
  redpanda_data:
    driver: local